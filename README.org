#+TITLE: Segmenter

This module separates background and foreground, using labeled key points.

* Prepare source code

  #+BEGIN_SRC sh
    git clone https://github.com/cy20lin/2018_fall_image_processing_final_api_segmenter ~/segmenter
    cd ~/segmenter
    git submodule update --init --recursive
  #+END_SRC

* Build this module

  #+BEGIN_SRC sh
    cd ~/segmenter
    mkdir build
    cd build
    cmake ..
    make
  #+END_SRC

* Test this project

  #+BEGIN_SRC sh
    cd ~/segmenter
    cd build
    ./test_api_segmenter_segmenter_cimg
  #+END_SRC

* The algorithm under the hood
  
** Step1. Blur the image

   Use Guassian filtering, with sigma = max(image.width, image.height)*0.002;
   
   [[./doc/blurred.png]]

** Step2. Build the Priority Image


   Get the gradient vector (x y directions) for each channel (r, g, b),

   Get the length (norm) of each gradient vector for each channel.

   Sum length for gradient vector in each channel.

   Add 1 to the sum and divide 1 using this sum.

   Now we got a priority at this point whose value is in the range (0,1].

   For smooth areas the priority value is high, otherwise the priority is low.
   
   
   Gradient in x direction.
   
   [[./doc/gx.png]]
   
   Gradient in y direction.
   
   [[./doc/gy.png]]

   Priority Image, with black = 0, white = 1
   
   [[./doc/p.png]]
   
** Step3. Watershed
   
   Given the labeled keypoints (i.e. foreground or background) and priority image.

   Initialization:
   
   For each neighbor (we use 8-neighbor in this project) of the keypoints.

   Push each neighbor point into priority queque given their priority.

   Propagation:
   
   Pop the point with the highest priority.

   Point with higher priority would be processed first.

   Push all non-labeled neighbors around this point into priority queue.

   Set the label of this point to the label of the labeled neighbor.

   Stop when priority queue is empty.
   
   Following figure is the result mask, with background in color red,
   foreground in color green.
   
   [[./doc/kmask.png]]
   
